<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>北冥鱼 Blog</title>
    <link>https://zhuchance.github.io/</link>
    <description>Recent content on 北冥鱼 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhuchance.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Istio 学习</title>
      <link>https://zhuchance.github.io/post/istiostudy/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/istiostudy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>OneCommand</title>
      <link>https://zhuchance.github.io/post/onecommand/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/onecommand/</guid>
      <description>MySQL压测： #生成数据： sysbench /usr/share/sysbench/tests/include/oltp_legacy/oltp.lua --threads=8 --rate=100000 --mysql-user=root --mysql-host=10.20.30.40 --mysql-port=3306 --oltp-test-mode=complex --mysql-db=test --oltp-tables-count=10 --oltp-table-size=100000 --threads=10 --time=120 --report-interval=10 prepare #开始压测： sysbench /usr/share/sysbench/tests/include/oltp_legacy/oltp.lua --mysql-host=10.20.30.40 --mysql-port=3306 --mysql-user=root --oltp-test-mode=complex --mysql-db=test --oltp-tables-count=10 --oltp-table-size=100000 --threads=10 --time=120 --report-interval=10 run &amp;gt;&amp;gt; /home/mysysbench.log #删除数据： sysbench /usr/share/sysbench/tests/include/oltp_legacy/oltp.lua --mysql-host=10.20.30.40 --mysql-port=3306 --mysql-user=root --oltp-test-mode=complex --mysql-db=test --oltp-tables-count=10 --oltp-table-size=100000 --threads=10 --time=120 --report-interval=10 cleanup k</description>
    </item>
    
    <item>
      <title>window10使用WSL2开启Ubuntu20.04</title>
      <link>https://zhuchance.github.io/post/%E4%BD%BF%E7%94%A8wsl2/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/%E4%BD%BF%E7%94%A8wsl2/</guid>
      <description>食用方式： windows10 开启hyperV和Window Subsystem for Linux 服务并重启，然后在商店搜索Ubuntu并安装之 绿色安装方法： (下载wsl的appx镜像)[h</description>
    </item>
    
    <item>
      <title>Git-Basic-Use</title>
      <link>https://zhuchance.github.io/post/2020-08-06-git-study/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-08-06-git-study/</guid>
      <description>####github的基础用法 #####本地上传sshkey， 1.打开git bash 删除~/.ssh/* 把现有的ssh key都删掉，然后运行 ssh-keygen -t rsa</description>
    </item>
    
    <item>
      <title>Update-Centos8.2-kernel</title>
      <link>https://zhuchance.github.io/post/2020-08-06-update-centos8-kernel/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-08-06-update-centos8-kernel/</guid>
      <description>1.查看版本 cat /etc/redhat-release CentOS Linux release 8.2.2004 (Core) uname -r 4.18.0-193.6.3.el8_2.x86_64 2.使用ELRepo仓库 使用ELRepo仓库 rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org 安装ELRepo仓库的yum源： yum --disablerepo=&amp;#34;*&amp;#34; --enablerepo=&amp;#34;elrepo-kernel&amp;#34; list available Last metadata expiration check: 3:45:03 ago on Wed</description>
    </item>
    
    <item>
      <title>强制删除k8s上Terminating的Namespaces</title>
      <link>https://zhuchance.github.io/post/2020-08-07-forcedeletenamespace/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-08-07-forcedeletenamespace/</guid>
      <description>转载来自 直接复制一个shell脚本吧 #!/bin/bash set -e useage(){ echo &amp;#34;useage:&amp;#34; echo &amp;#34; delns.sh NAMESPACE&amp;#34; } if [ $# -lt 1 ];then useage exit fi NAMESPACE=$1 JSONFILE=${NAMESPACE}.json kubectl get ns &amp;#34;${NAMESPACE}&amp;#34; -o json &amp;gt; &amp;#34;${JSONFILE}&amp;#34; vi &amp;#34;${JSONFILE}&amp;#34; curl -k -H &amp;#34;Content-Type: application/json&amp;#34; -X PUT --data-binary @&amp;#34;${JSONFLE}&amp;#34; \ http://127.0.0.1:8001/api/v1/namespaces/&amp;#34;${NAMESPACE}&amp;#34;/finalize 使用的时候打开ap</description>
    </item>
    
    <item>
      <title>强制删除k8s上Terminating的Namespaces</title>
      <link>https://zhuchance.github.io/post/forcedeletenamespace/</link>
      <pubDate>Wed, 08 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/forcedeletenamespace/</guid>
      <description>转载来自 直接复制一个shell脚本吧 #!/bin/bash set -e useage(){ echo &amp;#34;useage:&amp;#34; echo &amp;#34; delns.sh NAMESPACE&amp;#34; } if [ $# -lt 1 ];then useage exit fi NAMESPACE=$1 JSONFILE=${NAMESPACE}.json kubectl get ns &amp;#34;${NAMESPACE}&amp;#34; -o json &amp;gt; &amp;#34;${JSONFILE}&amp;#34; vi &amp;#34;${JSONFILE}&amp;#34; curl -k -H &amp;#34;Content-Type: application/json&amp;#34; -X PUT --data-binary @&amp;#34;${JSONFLE}&amp;#34; \ http://127.0.0.1:8001/api/v1/namespaces/&amp;#34;${NAMESPACE}&amp;#34;/finalize 使用的时候打开ap</description>
    </item>
    
    <item>
      <title>在k8s上部署一个简单的mysql</title>
      <link>https://zhuchance.github.io/post/simplemysqldb/</link>
      <pubDate>Tue, 07 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/simplemysqldb/</guid>
      <description>warning 注意MySQL单实例只用于测试环境 ##namespace --- #apiVersion: v1 #kind: Namespace #metadata: # name: pre ##mysql-claim.yaml --- apiVersion: v1 kind: PersistentVolumeClaim metadata: name: mysql-ex-claim namespace: pre-mysql annotations: volume.beta.kubernetes.io/storage-class: &amp;#34;managed-nfs-storage&amp;#34; spec: accessModes: - ReadWriteOnce resources: requests: storage: 800Gi ##mysql-cm.yaml --- apiVersion: v1 kind: ConfigMap metadata: name: mysql-config namespace: pre-mysql data: custom.cnf: | [mysqld] server-id=1 log-bin expire_logs_days=7 sync_binlog=0 binlog_cache_size=1M</description>
    </item>
    
    <item>
      <title>rook-ceph-部署篇</title>
      <link>https://zhuchance.github.io/post/rook-ceph/</link>
      <pubDate>Sun, 28 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/rook-ceph/</guid>
      <description>warning 注意rook-ceph现在还不太建议上生产 What is Rook? Storage Operators for Kubernetes 引用官网 Rook turns distributed storage systems into self-managing, self-scaling, self-healing storage services. It automates the tasks of a storage administrator: deployment, bootstrapping, configuration, provisioning, scaling, upgrading, migration, disaster recovery, monitoring, and resource management. Rook uses the power of</description>
    </item>
    
    <item>
      <title>helm3 使用国内原安装Weave Scope</title>
      <link>https://zhuchance.github.io/post/helm3%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E5%8E%9F%E5%AE%89%E8%A3%85weavescope/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/helm3%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E5%8E%9F%E5%AE%89%E8%A3%85weavescope/</guid>
      <description>Weave Scope是Docker 和Kubernetes 可视化监控工具。 Scope 提供了至上而下的集群基础设施和应用的完整视图，用户可以轻松对分布式的容器化</description>
    </item>
    
    <item>
      <title>PrometheusOperator部署</title>
      <link>https://zhuchance.github.io/post/prometheusoperator%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/prometheusoperator%E9%83%A8%E7%BD%B2/</guid>
      <description>Prometheus-Operator官方提供的架构图： 可惜我自己用符号画出来变形了，这篇文章比较水，完全是凑流水账的，因为有些东西我现在还</description>
    </item>
    
    <item>
      <title>golang 实现 ssh批量执行命令</title>
      <link>https://zhuchance.github.io/post/2020-08-09-golang%E5%AE%9E%E7%8E%B0ssh%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-08-09-golang%E5%AE%9E%E7%8E%B0ssh%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
      <description>最近学习go编程，想做个ssh小工具，用来执行批量命令的，后面用来替换ansible的程序。不多说了直接贴代码： package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/mitchellh/go-homedir&amp;#34; &amp;#34;golang.org/x/crypto/ssh&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;time&amp;#34;</description>
    </item>
    
    <item>
      <title>golang 实现 ssh批量执行命令</title>
      <link>https://zhuchance.github.io/post/golang%E5%AE%9E%E7%8E%B0ssh%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/golang%E5%AE%9E%E7%8E%B0ssh%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</guid>
      <description>最近学习go编程，想做个ssh小工具，用来执行批量命令的，后面用来替换ansible的程序。不多说了直接贴代码： package main import ( &amp;#34;bufio&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;github.com/mitchellh/go-homedir&amp;#34; &amp;#34;golang.org/x/crypto/ssh&amp;#34; &amp;#34;io/ioutil&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; &amp;#34;strconv&amp;#34; &amp;#34;strings&amp;#34; &amp;#34;time&amp;#34;</description>
    </item>
    
    <item>
      <title>上篇-MetalLB 裸金属负载均衡安装与使用</title>
      <link>https://zhuchance.github.io/post/2020-03-10-metallb-network-load-balancer/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-03-10-metallb-network-load-balancer/</guid>
      <description>metalLB场景和介绍 用来给services暴露IP出来，规划一个集群同网段的IP出来，使用的时候services不能删除，这样方便对接公</description>
    </item>
    
    <item>
      <title>k8s使用NFS实现动态存储</title>
      <link>https://zhuchance.github.io/post/2020-03-13-k8s-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-03-13-k8s-nfs-%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8/</guid>
      <description>k8s使用NFS实现动态存储 Storage Classes StorageClass 为管理员提供了描述存储 &amp;ldquo;类&amp;rdquo; 的方法。 不同的类型可能会映射到不同的服务质量等级或备份</description>
    </item>
    
    <item>
      <title>Team双网卡绑定</title>
      <link>https://zhuchance.github.io/post/2020-03-13-team%E5%8F%8C%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-03-13-team%E5%8F%8C%E7%BD%91%E5%8D%A1%E7%BB%91%E5%AE%9A/</guid>
      <description>Team 生产环境的服务器使用的是多网卡，系统是centos7，于是将2个网卡绑定成一个网卡实现带宽和冗余都利用起来 cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/sysconfi</description>
    </item>
    
    <item>
      <title>Deployment Jenkins on Kubernetes Cluster</title>
      <link>https://zhuchance.github.io/post/2020-03-12-deployment-jenkins-on-k8s-cluster/</link>
      <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/2020-03-12-deployment-jenkins-on-k8s-cluster/</guid>
      <description>Jenkins Deployment Jenkins on Kubernetes Cluster deployment jenkins on k8s cluster The premise is that there is a load balancing 在k8s集群里面部署Jenkins，使用load balance暴露服务 ###jenkins-allinone.yaml ###PVC --- kind: PersistentVolumeClaim apiVersion: v1 metadata: name: jenkins-prd-lb-pvc namespace: kube-ops spec: storageClassName: &amp;#34;managed-nfs-storage&amp;#34;</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhuchance.github.io/search/placeholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/search/placeholder/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhuchance.github.io/top/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/top/about/</guid>
      <description>Guoyi Zhu is an System Operation Engineer for open source. He has a solid experience in the middleware and information technology industry for more than 5 years.
He loves open source, including kubernetes、docker、linux, etcd.
He also has strong interests in various tech stuff such as Artificial Intelligence, Storage, Smart Home.
He worked in HUAWEI for 3 years.
He is happy with his current job, but also willing to take new challenges if the opportunity matches his career path.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhuchance.github.io/top/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/top/books/</guid>
      <description>Machine learning学习笔记 Coursera 在线课程 Machine learning 笔记讲师: 吴恩达(Andrew Ng) 课程地址：https://www.</description>
    </item>
    
    <item>
      <title>macos使用socks5代理</title>
      <link>https://zhuchance.github.io/post/macos%E4%BD%BF%E7%94%A8socks5%E4%BB%A3%E7%90%86/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zhuchance.github.io/post/macos%E4%BD%BF%E7%94%A8socks5%E4%BB%A3%E7%90%86/</guid>
      <description>Homebrew设置socks5 由于Homebrew下载用的是curl, 我这有两种方法让curl走socks5 设置.curlrc echo &amp;#39;socks5 = &amp;#34;127.0.0.1:1080&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.curlrc</description>
    </item>
    
  </channel>
</rss>